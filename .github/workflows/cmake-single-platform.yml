name: Build Linux Helper

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: jurplel/install-qt-action@v4.3.0
      with:
        cache: 'true'
        version: '6.8.3'

    - name: Set build output directory
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++ \
          -DCMAKE_BUILD_TYPE=Release \
          -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

    # ---- Package AppImage ----
    - name: Package AppImage
      run: |
        APPDIR=AppDir
        mkdir -p $APPDIR/usr/bin
        cp ${{ steps.strings.outputs.build-output-dir }}/lbox-linux-install-helper $APPDIR/usr/bin/

        mkdir -p $APPDIR/usr/share/applications
        cat > $APPDIR/usr/share/applications/linux-helper.desktop <<EOF
        [Desktop Entry]
        Name=Linux Helper
        Exec=lbox-linux-install-helper
        Icon=linux-helper
        Type=Application
        Categories=Utility;
        EOF

        # copy existing 64x64 icon
        mkdir -p $APPDIR/usr/share/icons/hicolor/64x64/apps
        cp ${{ github.workspace }}/icon.png $APPDIR/usr/share/icons/hicolor/64x64/apps/linux-helper.png

        # download linuxdeploy + Qt plugin
        wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage linuxdeploy-plugin-qt-x86_64.AppImage

        # create AppImage
        ./linuxdeploy-x86_64.AppImage --appdir $APPDIR \
          --plugin qt \
          --output appimage

        mkdir -p output
        cp LinuxHelper-x86_64.AppImage output/

      # Extract version from the commit tag
    - name: Get Version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # Create release and upload AppImage
    - name: Create and Upload Release
      uses: softprops/action-gh-release@v2
      with:
        files: output/LinuxHelper-x86_64.AppImage
        name: Linux Helper ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
